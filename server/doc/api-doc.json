{
  "swagger": "2.0",
  "info": {
    "description": "A Daily Clock Api",
    "version": "1.0.0",
    "title": "Adayclock API",
    "termsOfService": "",
    "contact": {
      "email": "admin@adayclock.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "api.adayclock.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Get user JWT Token",
        "description": "Returns JWT Token",
        "operationId": "postLoginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "email": "email",
            "in": "body",
            "description": "User email",
            "required": true,
            "type": "string"
          },
          {
            "password": "password",
            "in": "body",
            "description": "User password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "404": {
            "description": "User not found"
          }
        }

      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find user by ID",
        "description": "Returns user info",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWTToken": []
          }
        ]
      }
    },
    "/product/{userId}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get user products list",
        "description": "",
        "operationId": "getProductsByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user whos products to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Error occurred"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWTToken": []
          }
        ]
      }
    },
    "/product/{userId}/{productId}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get user product by ID",
        "description": "",
        "operationId": "getProductByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user whos products to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of whos product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User or Product not found"
          }
        },
        "security": [
          {
            "JWTToken": []
          }
        ]
      },
      "patch": {
        "tags": [
          "product"
        ],
        "summary": "Update product",
        "description": "",
        "operationId": "updateProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "title",
            "description": "Optional title for product",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "security": [
          {
            "JWTToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid product"
          }
        }
      }
    },
    "/product": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Create new product",
        "description": "",
        "operationId": "createProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user whos products to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of whos product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "title",
            "description": "Optional title for product",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "security": [
          {
            "JWTToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid product"
          }
        }
      }
    },
    "/calendar/{userId}": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Get user calendars list",
        "description": "",
        "operationId": "getCalendarsByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user whos calendars to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWTToken": []
          }
        ]
      }
    },
    "/calendar/{userId}/{calendarId}": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Get user calendar by ID",
        "description": "",
        "operationId": "getCalendarById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user whos calendars to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "calendarId",
            "in": "path",
            "description": "ID of user whos calendars to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User or Calendar not found"
          }
        },
        "security": [
          {
            "JWTToken": []
          }
        ]
      },
      "patch": {
        "tags": [
          "calendar"
        ],
        "summary": "Update calendar",
        "description": "",
        "operationId": "updateCalendar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user whos calendars to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "calendarId",
            "in": "path",
            "description": "Update calendar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "title",
            "description": "Calendar title",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          }
        ],
        "security": [
          {
            "JWTToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          },
          "400": {
            "description": "Invalid calendar"
          },
          "404": {
            "description": "User or Calendar not found"
          }
        }
      }
    },
    "/calendar/{productId}": {
      "post": {
        "tags": [
          "calendar"
        ],
        "summary": "Create new calendar",
        "description": "",
        "operationId": "createCalendar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product to add calendar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "title",
            "description": "Calendar title",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          }
        ],
        "security": [
          {
            "JWTToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          },
          "400": {
            "description": "Invalid calendar"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/activity/{calendarId}": {
      "get": {
        "tags": [
          "activity"
        ],
        "summary": "Get calendar activities list for period",
        "description": "page && per_page parameters not used now",
        "operationId": "getActivities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Activities from date time",
            "required": true,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "Activities to date time",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page number",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer"
          },
          {
            "name": "per_page",
            "description": "Records per page",
            "in": "query",
            "required": false,
            "default": 10,
            "type": "integer"
          }
        ],
        "security": [
          {
            "JWTToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "400": {
            "description": "Invalid calendar"
          },
          "404": {
            "description": "Calendar not found"
          }
        }
      },
      "post": {
        "tags": [
          "activity"
        ],
        "summary": "Create new activity",
        "description": "",
        "operationId": "createActivity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "ID of calendar to add activity",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          }
        ],
        "security": [
          {
            "JWTToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "400": {
            "description": "Invalid calendar"
          },
          "404": {
            "description": "Calendar not found"
          }
        }
      }
    },
    "/activity/{activityId}": {
      "patch": {
        "tags": [
          "activity"
        ],
        "summary": "Update activity",
        "description": "",
        "operationId": "createActivity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          }
        ],
        "security": [
          {
            "JWTToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "400": {
            "description": "Invalid calendar"
          }
        }
      }
    },
    "/activity/{calendarId}/{activityId}": {
      "get": {
        "tags": [
          "activity"
        ],
        "summary": "Get activity by ID",
        "description": "",
        "operationId": "getActivityById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "JWTToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "400": {
            "description": "Invalid calendar"
          },
          "404": {
            "description": "Activity not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "JWTToken": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "AuthResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "xml": {
        "name": "AuthResponse"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        },
        "firstName": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "membership": {
          "type": "string",
          "enum": [
            null,
            "time",
            "calendar",
            "pro"
          ]
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "serial": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int64",
          "default": null
        }
      },
      "xml": {
        "name": "Product"
      }
    },
    "Calendar": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int64",
          "default": null
        }
      },
      "xml": {
        "name": "Calendar"
      }
    },
    "Activity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "repeat": {
          "type": "string",
          "enum": [
            "not",
            "day",
            "week",
            "month"
          ],
          "default": "not"
        },
        "activity_date": {
          "type": "string"
        },
        "activity_day": {
          "type": "integer"
        },
        "activity_time": {
          "type": "string"
        },
        "activity_type": {
          "type": "string",
          "enum": [
            "medicine",
            "visitor",
            "doctor",
            "food",
            "bathe",
            "sleep",
            "other"
          ]
        },
        "isActive": {
          "type": "boolean",
          "default": true
        },
        "description": {
          "type": "string",
          "default": null
        },
        "calendar_id": {
          "type": "integer",
          "format": "int64",
          "default": null
        }
      },
      "xml": {
        "name": "Activity"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}